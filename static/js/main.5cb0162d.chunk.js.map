{"version":3,"sources":["store/actions/types.js","store/actions/taskActions.js","store/reducers/task.js","store/reducers/board.js","store/reducers/index.js","store/reducers/boards.js","store/index.js","components/atoms/Action/Action.js","components/atoms/Card/Card.js","components/atoms/Column/Column.js","components/atoms/Dropdown/Dropdown.js","components/molecules/BoardInfo/BoardInfo.js","components/molecules/Task/Task.js","components/organisms/Board/Board.js","components/templates/BoardsList/BoardsList.js","index.js","App.js"],"names":["ADD_TASK","REMOVE_TASK","addTask","name","description","boardId","id","type","taskId","taskName","taskDescription","deleteTask","moveTask","fromBoardId","dispatch","getState","_fromBoard$tasks$find","find","board","tasks","task","initialState","reducers_task","state","arguments","length","undefined","action","types","v4","boards","map","b","Object","objectSpread","concat","toConsumableArray","filter","t","store","createStore","reducers","applyMiddleware","thunk","danger","secondary","succeed","primary","sizes","sm","md","lg","styled","button","_templateObject","_ref","_ref2","size","_ref3","underline","div","Card_templateObject","Header","Column_templateObject","Content","_templateObject2","Layout","_templateObject3","Column","header","children","react_default","a","createElement","DropdownItem","li","Dropdown_templateObject","DropdownContent","ul","Dropdown_templateObject2","Dropdown_templateObject3","Dropdown","_ref$items","items","onChoose","Dropdown_Layout","item","key","onClick","text","section","BoardInfo_templateObject","Row","BoardInfo_templateObject2","Name","h2","BoardInfo_templateObject3","Sorting","Action","_templateObject4","BoardInfo","sorting","onChangeSort","onAddingTask","BoardInfo_Layout","Task_templateObject","Title","h4","Task_templateObject2","Description","Task_templateObject3","Actions","Task_templateObject4","preapareBoard","ViewContent","title","otherBoards","onDelete","onMove","Fragment","EditContent","setTitle","setDescription","onSave","as","value","placeholder","onChange","e","target","Task","editMode","initialTitle","initialDesctiption","_useState","useState","_useState2","slicedToArray","_useState3","_useState4","Card","Task_Layout","Task_EditContent","Task_ViewContent","sortStirng","sorts","down","compareFunction","up","ItemWrapper","Board_templateObject","Board","onTaskMove","onTaskDelete","onTaskAdd","direction","setDirection","setAddTask","prepearedTasks","sort","BoardsList_templateObject","BoardWrapper","BoardsList_templateObject2","BoardsList","BoardsList_Layout","ReactDOM","render","es","useSelector","useDispatch","actions","taskActions","document","getElementById"],"mappings":"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","file":"static/js/main.5cb0162d.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK'\nexport const REMOVE_TASK = 'REMOVE_TASK'","import { ADD_TASK, REMOVE_TASK } from './types'\n\nexport const addTask = (name, description, boardId, id) => ({\n    type: ADD_TASK,\n    taskId: id,\n    taskName: name,\n    taskDescription: description,\n    boardId,\n})\n\nexport const deleteTask = (taskId, boardId) => ({\n    type: REMOVE_TASK,\n    taskId,\n    boardId\n})\n\nexport const moveTask = (taskId, boardId, fromBoardId) => (dispatch, getState) => {\n    const fromBoard = getState()\n        .find(board => board.id === fromBoardId)\n\n    const { name, description, id } = fromBoard.tasks\n        .find(task => task.id === taskId)\n\n    dispatch(deleteTask(taskId, fromBoardId))\n    dispatch(addTask(name, description, boardId, id ))\n}\n\n","import { types } from '../actions';\nimport { v4 } from 'uuid';\n\nconst initialState = {\n  id: 0,\n  name: '',\n  description: '',\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_TASK:\n        return {\n            id: action.taskId || v4(),\n            name: action.taskName,\n            description: action.taskDescription,\n        }\n    default:\n      return state\n  }\n};\n","import { types } from '../actions';\nimport task from './task'\n\nconst initialState = {\n  id: 0,\n  name: '',\n  tasks: []\n}\n\nexport default (state = initialState, action) => {\n  if (action.boardId && action.boardId !== state.id) return state  \n\n  switch (action.type) {\n    case types.ADD_TASK:\n        return { ...state, tasks: [...state.tasks, task(undefined, action)] }\n    case types.REMOVE_TASK:\n        return { ...state, tasks: state.tasks.filter(task => task.id !== action.taskId) }\n    default:\n      return {...state, tasks: state.tasks.map(t => task(t, action))}\n  }\n};\n","import boards from './boards'\n\nexport default boards","import board from './board'\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    default:\n      return state.map(b => board(b, action))\n  }\n};\n","import { createStore, applyMiddleware } from 'redux'\nimport reducers from './reducers'\nimport thunk from 'redux-thunk';\n\nimport * as actions from './actions'\n\nconst initialState = [\n    {\n        id: 1,\n        name: 'To Do',\n        tasks: [\n            { id: 1, name: '1', description: 'qwer' },\n            { id: 2, name: '2', description: 'asdf' },\n            { id: 3, name: '3', description: 'zcxv' },\n            { id: 4, name: '4', description: 'rtyu' },\n            { id: 5, name: '5', description: 'dfgh' },\n        ]\n    },\n    { id: 2, name: 'In process', tasks: [] },\n    { id: 3, name: 'Done', tasks: [] },\n]\n\nconst store = createStore(\n    reducers,\n    initialState,\n    applyMiddleware(thunk)\n);\n\nexport {\n    store,\n    actions,\n    reducers,\n};\n\nexport default store;","import styled from 'styled-components'\n\nexport const types = {\n    danger: '#ef5050',\n    secondary: '#bdb9b9',\n    succeed: '#2DCD72',\n    primary: '#4B7CF3',\n}\n\nexport const sizes = {\n    sm: '14px',\n    md: '16px',\n    lg: '18px',\n}\n\nexport default styled.button`\n    all: unset;\n    color: ${({ type }) => types[type]};\n    font-size: ${({ size }) => sizes[size]};\n    cursor: pointer;\n\n    ${ ({underline, type}) => underline && `\n        border-bottom: 1px solid ${types[type] || '#000000'}22;\n    ` }\n`","import styled from 'styled-components'\n\nexport default styled.div`\n    background-color: #ffffff;\n    padding: 10px;\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst Header = styled.div`\n    box-shadow: 0 0 12px #eeeeee;\n    z-index: +1;\n`\n\nconst Content = styled.div`\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    overflow: auto;\n    padding-top: 20px;\n`\n\nconst Layout = styled.div`\n    display: flex;\n    flex-direction: column;\n    border-radius: 8px;\n    background-color: rgb(242, 242, 242);\n    overflow: hidden;\n    height: 100%;\n    flex: 1;\n`\n\nexport default ({ header, children }) => (\n    <Layout>\n        <Header>\n            { header }\n        </Header>\n        <Content>\n            { children }\n        </Content>\n    </Layout>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nconst DropdownItem = styled.li`\n    color: #bdb9b9;\n    font-size: 14px;\n    cursor: pointer;\n`\n\nconst DropdownContent = styled.ul`\n    display: none;\n    position: absolute;\n    background: white;\n    padding: 10px 15px 10px 10px;\n    list-style-type: none;\n    left: 0;\n    right: 0;\n    top: 0;\n    box-shadow: 0 0 12px #eeeeee;\n`\n\nconst Layout = styled.div`\n    position: relative;\n    width: fit-content\n    \n    &:hover ${DropdownContent}:not(:empty) {\n        display: block;\n    }\n`\n\nexport default ({ children,items = [], onChoose }) => (\n    <Layout>\n        {children}\n        <DropdownContent>\n            {items.map(item =>\n                <DropdownItem key={item.id} onClick={() => onChoose(item)}>\n                    {item.text}\n                </DropdownItem>\n            )}\n        </DropdownContent>\n    </Layout>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Action } from '../../atoms'\n\nconst Layout = styled.section`\n    position: relative;\n    background-color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n\n    &:not(:last-child) {\n        margin-bottom: 10px\n    }\n`\n\nconst Name = styled.h2`\n    all: unset;\n`\n\nconst Sorting = styled(Action)`\n    position: absolute;\n    right: 10px\n    align-self: flex-end;\n`\n\n\nexport default ({ name, sorting, onChangeSort, onAddingTask }) => (\n    <Layout>\n        <Row>\n            <Name>{name}</Name>\n            {sorting && \n                <Sorting type={'succeed'} onClick={onChangeSort}>\n                    {sorting}\n                </Sorting>\n            }\n        </Row>\n        <Row>\n            <Action type={'primary'} underline onClick={onAddingTask}>\n                Добавить задачу\n            </Action>\n        </Row>\n    </Layout>\n)","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Card, Action, Dropdown } from '../../atoms'\n\nconst Layout = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\n\nconst Title = styled.h4`\n    all: unset;\n    font-weight: 900;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n`\n\nconst Description = styled.div`\n    all: unset;\n    font-size: 14px;\n    margin: 0 0 10px 0;\n`\n\nconst Actions = styled.div`\n    display: flex;\n\n    & > *:not(:last-child) {\n        margin-right: 5px;\n    }\n`\n\nconst preapareBoard = (board) => ({ id: board.id, text: board.name })\n\nconst ViewContent = ({ title, description, otherBoards, onDelete, onMove }) => (\n    <React.Fragment>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n        <Actions>\n            <Action type={'danger'} onClick={onDelete}>Удалить</Action>\n            <Dropdown items={otherBoards.map(preapareBoard)} onChoose={(item => onMove(item.id))}>\n                <Action type={'secondary'}>Переместить ↓</Action>\n            </Dropdown>\n        </Actions>\n    </React.Fragment>\n)\n\nconst EditContent = ({ title, description, setTitle, setDescription, onSave }) => (\n    <React.Fragment>\n        <Title\n            as='input'\n            value={title}\n            placeholder='Title'\n            onChange={e => setTitle(e.target.value)}\n        />\n        <Description\n            as='textarea'\n            value={description}\n            placeholder='Description'\n            onChange={e => setDescription(e.target.value)}\n        />\n        <Actions>\n           <Action type={'succeed'} onClick={onSave}>Сохранить</Action>\n        </Actions>\n    </React.Fragment>\n)\n\nexport default ({ editMode, title: initialTitle, description: initialDesctiption, otherBoards, onDelete, onMove, onSave }) =>{\n    const [title, setTitle] = useState(initialTitle)\n    const [description, setDescription] = useState(initialDesctiption)\n\n    return (\n        <Card>\n            <Layout>\n            { editMode\n                ? <EditContent {...{ title, setTitle, description, setDescription, onSave: () => onSave({ title, description }) }}/>\n                : <ViewContent {...{ title, description, otherBoards, onDelete, onMove }}/>\n            }\n            </Layout>\n        </Card>\n    )\n}\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { Column } from '../../atoms'\nimport { BoardInfo, Task } from '../../molecules'\n\nconst sortStirng = (a, b) => {\n    if(a < b) { return -1; }\n    if(a > b) { return 1; }\n    return 0;\n}\n\nexport const sorts = {\n    'down': {\n        text: 'sort (A-я)',\n        compareFunction: (a, b) => sortStirng(a.name, b.name)\n    },\n    'up': {\n        text: 'sort (я-А)',\n        compareFunction: (a, b) => sortStirng(b.name, a.name)\n    },\n}\n\nconst ItemWrapper = styled.div`\n    margin: 0px 10px 20px;\n`\n\nexport default ({ board, otherBoards, onTaskMove, onTaskDelete, onTaskAdd }) => {\n    const [direction, setDirection] = useState('down')\n    const [addTask, setAddTask] = useState(false)\n\n    const changeSort = () => {\n        if (direction === 'down') setDirection('up')\n        else setDirection('down')\n    }\n\n    const onSave = ({ title, description }) => {\n        if (!title.length || !description.length) return\n        setAddTask(false)\n        onTaskAdd({\n            taskName: title,\n            taskDescription: description,\n            boardId: board.id\n        })\n    }\n\n    const prepearedTasks = board.tasks\n        .sort(sorts[direction].compareFunction)\n\n    return(\n        <Column\n            header={\n                <BoardInfo\n                    name={board.name}\n                    sorting={sorts[direction].text}\n                    onChangeSort={changeSort}\n                    onAddingTask={() => {setAddTask(true)}}\n                />\n            }\n        >\n        {addTask && (\n            <ItemWrapper key={'none'}>\n                <Task\n                    editMode\n                    title=''\n                    description=''\n                    onSave={onSave}\n                />\n            </ItemWrapper>\n        )}\n        {prepearedTasks.map(task =>\n            <ItemWrapper key={task.id}>\n                <Task\n                    title={task.name}\n                    description={task.description}\n                    otherBoards={otherBoards}\n                    onMove={(boardId) => onTaskMove({ boardId, taskId: task.id, fromBoardId: board.id })}\n                    onDelete={() => onTaskDelete({ boardId: board.id, taskId: task.id})}\n                />\n            </ItemWrapper>\n        )}\n        </Column>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Board } from '../../organisms'\n\nconst Layout = styled.div`\n    display: flex;\n    height: 100%;\n`\n\nconst BoardWrapper = styled.div`\n    flex: 1;\n\n    &:not(:last-child) {\n        margin-right: 20px;\n    }\n`\n\nexport default ({ boards, onTaskMove, onTaskDelete, onTaskAdd }) => (\n    <Layout>\n        {boards.map(board => (\n            <BoardWrapper key={board.id}>\n                <Board\n                    board={board}\n                    otherBoards={boards.filter(b => b !== board)}\n                    onTaskMove={onTaskMove}\n                    onTaskDelete={onTaskDelete}\n                    onTaskAdd={onTaskAdd}\n                />\n            </BoardWrapper>\n        ))}\n    </Layout>\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport BoardsList from './components/templates/BoardsList'\nimport { actions } from './store'\n\nexport default () => {\n    const boards = useSelector(state => state)\n    const dispatch = useDispatch()\n\n    const onTaskDelete = ({ taskId, boardId }) =>\n        dispatch(actions.taskActions.deleteTask(taskId, boardId))\n\n    const onTaskMove = ({ taskId, boardId, fromBoardId }) =>\n        dispatch(actions.taskActions.moveTask(taskId, boardId, fromBoardId))\n\n    const onTaskAdd = ({ taskName, taskDescription, boardId }) =>\n        dispatch(actions.taskActions.addTask(taskName, taskDescription, boardId))\n\n    return <BoardsList {...{ boards, onTaskDelete, onTaskMove, onTaskAdd }} />\n};\n"],"sourceRoot":""}