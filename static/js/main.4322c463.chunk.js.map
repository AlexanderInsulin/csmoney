{"version":3,"sources":["store/actions/types.js","store/actions/taskActions.js","store/reducers/task.js","store/reducers/list.js","store/reducers/index.js","store/reducers/board.js","store/index.js","components/shared/Action/Action.js","components/shared/Dropdown/Dropdown.js","components/shared/Card/Card.js","components/shared/Column/Column.js","components/shared/Editable/Editable.js","components/List/ListHeader/ListHeader.js","components/Task/Task.js","components/List/ListBody/ListBody.js","components/List/List.js","components/Board/Board.js","index.js","App.js"],"names":["ADD_TASK","REMOVE_TASK","UPDATE_TASK","addTask","name","description","listId","id","type","taskId","taskName","taskDescription","deleteTask","initialState","reducers_task","state","arguments","length","undefined","action","types","v4","Object","objectSpread","fields","tasks","board","map","l","concat","toConsumableArray","task","filter","t","list","store","createStore","reducers","applyMiddleware","thunk","danger","secondary","succeed","primary","sizes","sm","md","lg","styled","button","_templateObject","_ref","_ref2","size","_ref3","underline","DropdownItem","li","Dropdown_templateObject","DropdownContent","ul","_templateObject2","Layout","div","_templateObject3","Dropdown","children","_ref$items","items","_ref$keyName","keyName","_ref$textName","textName","onChoose","react_default","a","createElement","item","key","onClick","Card_templateObject","Column_templateObject","StyledContentEditable","ContentEditable","Editable_templateObject","Editable","text","placeholder","onChange","_ref$tagName","tagName","className","ref","useRef","innerRef","html","e","target","value","section","ListHeader_templateObject","Row","ListHeader_templateObject2","Name","h2","ListHeader_templateObject3","Sorting","Action","_templateObject4","ListHeader","sorting","onChangeSort","onAddingTask","ListHeader_Layout","Task_templateObject","Title","Task_templateObject2","Description","Task_templateObject3","Actions","Task_templateObject4","listToDropdown","Task","editMode","title","otherLists","onDelete","onMove","onTitleChange","onDescriptionChange","Card","Task_Layout","ListBody_templateObject","ItemWrapper","ListBody_templateObject2","ListBody","ListBody_Layout","sortStirng","b","sorts","down","compareFunction","up","List","onTaskMove","onTaskDelete","onTaskAdd","onTaskUpdate","_useState","useState","_useState2","slicedToArray","direction","setDirection","prepearedTasks","sort","Column","Board_templateObject","ListWrapper","Board_templateObject2","Board","lists","Board_Layout","ReactDOM","render","es","useSelector","dispatch","useDispatch","fromListId","getState","_fromList$tasks$find","find","moveTask","fileds","updateTask","document","getElementById"],"mappings":"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","file":"static/js/main.4322c463.chunk.js","sourcesContent":["export const ADD_TASK = 'ADD_TASK'\nexport const REMOVE_TASK = 'REMOVE_TASK'\nexport const UPDATE_TASK = 'UPDATE_TASK'","import { ADD_TASK, REMOVE_TASK, UPDATE_TASK } from './types'\n\nexport const addTask = (name, description, listId, id) => ({\n    type: ADD_TASK,\n    taskId: id,\n    taskName: name,\n    taskDescription: description,\n    listId,\n})\n\nexport const deleteTask = (taskId, listId) => ({\n    type: REMOVE_TASK,\n    taskId,\n    listId\n})\n\nexport const updateTask = (listId, taskId, fields) => ({\n    type: UPDATE_TASK,\n    taskId,\n    listId,\n    fields\n})\n\nexport const moveTask = (fromListId, taskId, listId) => (dispatch, getState) => {\n    const fromList = getState()\n        .find(list => list.id === fromListId)\n\n    const { name, description, id } = fromList.tasks\n        .find(task => task.id === taskId)\n\n\n    dispatch(deleteTask(taskId, fromListId))\n    dispatch(addTask(name, description, listId, id ))\n}\n\n","import { types } from '../actions';\nimport { v4 } from 'uuid';\n\nconst initialState = {\n  id: 0,\n  name: '',\n  description: '',\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case types.ADD_TASK:\n        return {\n            id: action.taskId || v4(),\n            name: action.taskName,\n            description: action.taskDescription,\n        }\n    case types.UPDATE_TASK:\n        if (action.taskId !== state.id) return state\n        return { ...state, ...action.fields }\n    default:\n      return state\n  }\n};\n","import { types } from '../actions';\nimport task from './task'\n\nconst initialState = {\n  id: 0,\n  name: '',\n  tasks: []\n}\n\nexport default (state = initialState, action) => {\n  if (action.listId && action.listId !== state.id) return state  \n\n  switch (action.type) {\n    case types.ADD_TASK:\n        return { ...state, tasks: [...state.tasks, task(undefined, action)] }\n    case types.REMOVE_TASK:\n        return { ...state, tasks: state.tasks.filter(task => task.id !== action.taskId) }\n    default:\n      return {...state, tasks: state.tasks.map(t => task(t, action))}\n  }\n};\n","import board from './board'\n\nexport default board","import list from './list'\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    default:\n      return state.map(l => list(l, action))\n  }\n};\n","import { createStore, applyMiddleware } from 'redux'\nimport reducers from './reducers'\nimport thunk from 'redux-thunk';\n\nimport * as actions from './actions'\n\nconst initialState = [\n    { id: 1, name: 'To Do', tasks: [] },\n    { id: 2, name: 'In process', tasks: [] },\n    { id: 3, name: 'Done', tasks: [] },\n]\n\nconst store = createStore(\n    reducers,\n    initialState,\n    applyMiddleware(thunk)\n);\n\nexport {\n    store,\n    actions,\n    reducers,\n};\n\nexport default store;","import styled from 'styled-components'\n\nexport const types = {\n    danger: '#ef5050',\n    secondary: '#bdb9b9',\n    succeed: '#2DCD72',\n    primary: '#4B7CF3',\n    undefined: '#000000'\n}\n\nexport const sizes = {\n    sm: '14px',\n    md: '16px',\n    lg: '18px',\n}\n\nexport default styled.button`\n    all: unset;\n    color: ${({ type }) => types[type]};\n    font-size: ${({ size }) => sizes[size]};\n    cursor: pointer;\n\n    ${ ({underline, type}) => underline && `\n        border-bottom: 1px solid ${types[type]}22;\n    ` }\n`","import React from 'react'\nimport styled from 'styled-components'\n\nconst DropdownItem = styled.li`\n    color: #bdb9b9;\n    font-size: 14px;\n    cursor: pointer;\n`\n\nconst DropdownContent = styled.ul`\n    display: none;\n    position: absolute;\n    background: white;\n    padding: 10px 15px 10px 10px;\n    list-style-type: none;\n    left: 0;\n    right: 0;\n    top: 0;\n    box-shadow: 0 0 12px #eeeeee;\n`\n\nconst Layout = styled.div`\n    position: relative;\n    width: fit-content\n    \n    &:hover ${DropdownContent}:not(:empty) {\n        display: block;\n    }\n`\n\nexport default ({ children, items = [], keyName = 'id', textName = 'text', onChoose }) => (\n    <Layout>\n        {children}\n        <DropdownContent>\n            {items.map(item =>\n                <DropdownItem key={item[keyName]} onClick={() => onChoose(item[keyName])}>\n                    {item[textName]}\n                </DropdownItem>\n            )}\n        </DropdownContent>\n    </Layout>\n)","import styled from 'styled-components'\n\nexport default styled.div`\n    background-color: #ffffff;\n    padding: 10px;\n`","import styled from 'styled-components'\n\nexport default styled.div`\n    display: flex;\n    flex-direction: column;\n    border-radius: 8px;\n    background-color: rgb(242, 242, 242);\n    overflow: hidden;\n    height: 100%;\n    flex: 1;\n`","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport ContentEditable from 'react-contenteditable'\n\nconst StyledContentEditable = styled(ContentEditable)`\n    outline: none;\n    min-width: 100%;\n\n    &:empty:before {\n        content: attr(placeholder);\n        color: #bdb9b9;\n    }\n`\n\nexport default ({ text, placeholder, onChange, tagName = 'div', className }) => {\n    const ref = useRef()\n    return (\n        <StyledContentEditable\n            innerRef={ref}\n            placeholder={placeholder}\n            html={text}\n            onChange={(e) => { onChange(e.target.value) }}\n            tagName={tagName}\n            className={className}\n        />\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Action } from '../../shared'\n\nconst Layout = styled.section`\n    position: relative;\n    background-color: #ffffff;\n    display: flex;\n    flex-direction: column;\n    padding: 10px;\n    box-shadow: 0 0 12px #eeeeee;\n`\n\nconst Row = styled.div`\n    display: flex;\n    justify-content: center;\n\n    &:not(:last-child) {\n        margin-bottom: 10px\n    }\n`\n\nconst Name = styled.h2`\n    all: unset;\n`\n\nconst Sorting = styled(Action)`\n    position: absolute;\n    right: 10px\n    align-self: flex-end;\n`\n\n\nexport default ({ name, sorting, onChangeSort, onAddingTask }) => (\n    <Layout>\n        <Row>\n            <Name>{name}</Name>\n            {sorting && \n                <Sorting type={'succeed'} onClick={onChangeSort}>\n                    {sorting}\n                </Sorting>\n            }\n        </Row>\n        <Row>\n            <Action type={'primary'} underline onClick={onAddingTask}>\n                Добавить задачу\n            </Action>\n        </Row>\n    </Layout>\n)","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Action, Dropdown, Card, Editable } from '../shared'\n\nconst Layout = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nconst Title = styled(Editable)`\n    font-weight: 900;\n    font-size: 16px;\n    margin: 0 0 10px 0;\n`\n\nconst Description = styled(Editable)`\n    font-size: 14px;\n    margin: 0 0 10px 0;\n`\n\nconst Actions = styled.div`\n    display: flex;\n\n    & > *:not(:last-child) {\n        margin-right: 5px;\n    }\n`\n\nconst listToDropdown = (list) => ({ ...list, text: list.name })\n\nexport default ({ editMode, title, description, otherLists, onDelete, onMove, onTitleChange, onDescriptionChange }) => (\n    <Card>\n        <Layout>\n            <Title text={title} tagName='h4' onChange={onTitleChange} placeholder='Title' />\n            <Description text={description} onChange={onDescriptionChange} placeholder='Description'  />\n            <Actions>\n                <Action type={'danger'} onClick={onDelete}>Удалить</Action>\n                <Dropdown items={otherLists.map(listToDropdown)} onChoose={(item => onMove(item))}>\n                    <Action type={'secondary'}>Переместить ↓</Action>\n                </Dropdown>\n            </Actions>\n        </Layout>\n    </Card>\n)\n","import React from 'react'\nimport styled from 'styled-components'\nimport Task from '../../Task'\n\nconst Layout = styled.div`\n    height: 100%;\n    width: 100%;\n    overflow: auto;\n    display: flex;\n    flex-direction: column;\n    padding-top: 20px;\n`\n\nconst ItemWrapper = styled.div`\n    margin: 0px 10px 20px;\n`\n\nexport default ({ tasks, otherLists, onMove, onDelete, onTitleChange, onDescriptionChange }) => (\n    <Layout>\n        {tasks.map(task =>\n            <ItemWrapper key={task.id}>\n                <Task\n                    title={task.name}\n                    description={task.description}\n                    otherLists={otherLists}\n                    onMove={(listId) => onMove(task.id, listId)}\n                    onDelete={() => onDelete(task.id)}\n                    onTitleChange={(value) => onTitleChange(task.id, value)}\n                    onDescriptionChange={(value) => onDescriptionChange(task.id, value)}\n                />\n            </ItemWrapper>\n        )}\n    </Layout>\n)","import React, { useState } from 'react'\n\nimport { Column } from '../shared'\nimport ListHeader from './ListHeader'\nimport ListBody from './ListBody'\n\nconst sortStirng = (a, b) => {\n    if(a < b) { return -1; }\n    if(a > b) { return 1; }\n    return 0;\n}\n\nexport const sorts = {\n    'down': {\n        text: 'sort (A-я)',\n        compareFunction: (a, b) => sortStirng(a.name, b.name)\n    },\n    'up': {\n        text: 'sort (я-А)',\n        compareFunction: (a, b) => sortStirng(b.name, a.name)\n    },\n}\n\nexport default ({ list, otherLists, onTaskMove, onTaskDelete, onTaskAdd, onTaskUpdate }) => {\n    const [direction, setDirection] = useState('down')\n\n    const changeSort = () => {\n        if (direction === 'down') setDirection('up')\n        else setDirection('down')\n    }\n\n    const prepearedTasks = list.tasks\n        .sort(sorts[direction].compareFunction)\n\n    return(\n        <Column>\n            <ListHeader\n                name={list.name}\n                sorting={sorts[direction].text}\n                onChangeSort={changeSort}\n                onAddingTask={() => onTaskAdd(list.id)}\n            />\n            <ListBody\n                tasks={prepearedTasks}\n                otherLists={otherLists}\n                onMove={(taskId, listId) => onTaskMove(list.id, taskId, listId)}\n                onDelete={(taskId) => onTaskDelete(taskId, list.id)}\n                onTitleChange={(taskId, value) => onTaskUpdate(list.id, taskId, { name: value })}\n                onDescriptionChange={(taskId, value) => onTaskUpdate(list.id, taskId, { description: value })}\n            />\n        </Column>\n    )\n}","import React from 'react'\nimport styled from 'styled-components'\n\nimport List from '../List'\n\nconst Layout = styled.div`\n    display: flex;\n    height: 100%;\n`\n\nconst ListWrapper = styled.div`\n    flex: 1;\n\n    &:not(:last-child) {\n        margin-right: 20px;\n    }\n`\n\nexport default ({ lists, onTaskMove, onTaskDelete, onTaskAdd, onTaskUpdate }) => (\n    <Layout>\n        {lists.map(list => (\n            <ListWrapper key={list.id}>\n                <List\n                    list={list}\n                    otherLists={lists.filter(b => b !== list)}\n                    onTaskMove={onTaskMove}\n                    onTaskDelete={onTaskDelete}\n                    onTaskAdd={onTaskAdd}\n                    onTaskUpdate={onTaskUpdate}\n                />\n            </ListWrapper>\n        ))}\n    </Layout>\n)\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport Board from './components/Board'\nimport { deleteTask, moveTask, addTask, updateTask } from './store/actions/taskActions'\n\nexport default () => {\n    const lists = useSelector(state => state)\n    const dispatch = useDispatch()\n\n    const onTaskDelete = (taskId, listId) =>\n        dispatch(deleteTask(taskId, listId))\n\n    const onTaskMove = (fromListId, taskId, listId) =>\n        dispatch(moveTask(fromListId, taskId, listId))\n\n    const onTaskAdd = (listId) =>\n        dispatch(addTask('', '', listId))\n\n    const onTaskUpdate = (listId, taskId, fileds) =>\n        dispatch(updateTask(listId, taskId, fileds))\n\n    return <Board {...{ lists, onTaskDelete, onTaskMove, onTaskAdd, onTaskUpdate}} />\n};\n"],"sourceRoot":""}